{
  "uid" : "5a9cbcccd1963a68",
  "name" : "Post and like",
  "fullName" : "Tests.test_for_like.TestMain#test_like_post",
  "historyId" : "640338c21149029323a2b1c640b73990",
  "time" : {
    "start" : 1751459392073,
    "stop" : 1751459422884,
    "duration" : 30811
  },
  "status" : "broken",
  "statusMessage" : "playwright._impl._errors.TimeoutError: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for navigation to \"https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index\" until 'load'\n============================================================",
  "statusTrace" : "self = <test_for_like.TestMain object at 0x7f5cebf7c4f0>\n\n    @allure.title(\"Post and like\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.smoke\n    @pytest.mark.asyncio\n    async def test_like_post(self):\n        await self.login_page.open()\n        await self.login_page.login(self.data.LOGIN)\n        await self.login_page.password(self.data.PASSWORD)\n        await self.login_page.submit_button()\n>       await self.dashboard_page.is_open()\n\nTests/test_for_like.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Pages.dashboard_page.DashboardPage object at 0x7f5cec23ed70>\n\n    async def is_open(self):\n>       await self.page.wait_for_url(self.PAGE_URL)\n\nBase/base_page.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Page url='https://opensource-demo.orangehrmlive.com/web/index.php/auth/login'>\nurl = 'https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index'\n\n    async def wait_for_url(\n        self,\n        url: typing.Union[str, typing.Pattern[str], typing.Callable[[str], bool]],\n        *,\n        wait_until: typing.Optional[\n            Literal[\"commit\", \"domcontentloaded\", \"load\", \"networkidle\"]\n        ] = None,\n        timeout: typing.Optional[float] = None,\n    ) -> None:\n        \"\"\"Page.wait_for_url\n    \n        Waits for the main frame to navigate to the given URL.\n    \n        **Usage**\n    \n        ```py\n        await page.click(\\\"a.delayed-navigation\\\") # clicking the link will indirectly cause a navigation\n        await page.wait_for_url(\\\"**/target.html\\\")\n        ```\n    \n        Parameters\n        ----------\n        url : Union[Callable[[str], bool], Pattern[str], str]\n            A glob pattern, regex pattern or predicate receiving [URL] to match while waiting for the navigation. Note that if\n            the parameter is a string without wildcard characters, the method will wait for navigation to URL that is exactly\n            equal to the string.\n        wait_until : Union[\"commit\", \"domcontentloaded\", \"load\", \"networkidle\", None]\n            When to consider operation succeeded, defaults to `load`. Events can be either:\n            - `'domcontentloaded'` - consider operation to be finished when the `DOMContentLoaded` event is fired.\n            - `'load'` - consider operation to be finished when the `load` event is fired.\n            - `'networkidle'` - **DISCOURAGED** consider operation to be finished when there are no network connections for\n              at least `500` ms. Don't use this method for testing, rely on web assertions to assess readiness instead.\n            - `'commit'` - consider operation to be finished when network response is received and the document started\n              loading.\n        timeout : Union[float, None]\n            Maximum operation time in milliseconds, defaults to 30 seconds, pass `0` to disable timeout. The default value can\n            be changed by using the `browser_context.set_default_navigation_timeout()`,\n            `browser_context.set_default_timeout()`, `page.set_default_navigation_timeout()` or\n            `page.set_default_timeout()` methods.\n        \"\"\"\n    \n        return mapping.from_maybe_impl(\n>           await self._impl_obj.wait_for_url(\n                url=self._wrap_handler(url), waitUntil=wait_until, timeout=timeout\n            )\n        )\n\n../local/lib/python3.10/dist-packages/playwright/async_api/_generated.py:9116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Page url='https://opensource-demo.orangehrmlive.com/web/index.php/auth/login'>\nurl = 'https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index'\nwaitUntil = None, timeout = None\n\n    async def wait_for_url(\n        self,\n        url: URLMatch,\n        waitUntil: DocumentLoadState = None,\n        timeout: float = None,\n    ) -> None:\n>       return await self._main_frame.wait_for_url(**locals_to_params(locals()))\n\n../local/lib/python3.10/dist-packages/playwright/_impl/_page.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Frame name= url='https://opensource-demo.orangehrmlive.com/web/index.php/auth/login'>\nurl = 'https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index'\nwaitUntil = None, timeout = None\n\n    async def wait_for_url(\n        self,\n        url: URLMatch,\n        waitUntil: DocumentLoadState = None,\n        timeout: float = None,\n    ) -> None:\n        assert self._page\n        if url_matches(\n            self._page._browser_context._options.get(\"baseURL\"), self.url, url\n        ):\n            await self._wait_for_load_state_impl(state=waitUntil, timeout=timeout)\n            return\n>       async with self.expect_navigation(\n            url=url, waitUntil=waitUntil, timeout=timeout\n        ):\n\n../local/lib/python3.10/dist-packages/playwright/_impl/_frame.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._event_context_manager.EventContextManagerImpl object at 0x7f5cebf8a800>\nargs = (None, None, None)\n\n    async def __aexit__(self, *args: Any) -> None:\n>       await self._future\n\n../local/lib/python3.10/dist-packages/playwright/_impl/_event_context_manager.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    async def continuation() -> Optional[Response]:\n>       event = await waiter.result()\nE       playwright._impl._errors.TimeoutError: Timeout 30000ms exceeded.\nE       =========================== logs ===========================\nE       waiting for navigation to \"https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index\" until 'load'\nE       ============================================================\n\n../local/lib/python3.10/dist-packages/playwright/_impl/_frame.py:209: TimeoutError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1751459391625,
      "stop" : 1751459391626,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1751459391626,
      "stop" : 1751459391626,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "page",
    "time" : {
      "start" : 1751459391626,
      "stop" : 1751459392072,
      "duration" : 446
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1751459392072,
      "stop" : 1751459392072,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "delete_output_dir",
    "time" : {
      "start" : 1751459391626,
      "stop" : 1751459391626,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1751459391626,
      "stop" : 1751459391626,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "event_loop_policy",
    "time" : {
      "start" : 1751459391626,
      "stop" : 1751459391626,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_function_event_loop",
    "time" : {
      "start" : 1751459391626,
      "stop" : 1751459391626,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "playwright._impl._errors.TimeoutError: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for navigation to \"https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index\" until 'load'\n============================================================",
    "statusTrace" : "self = <test_for_like.TestMain object at 0x7f5cebf7c4f0>\n\n    @allure.title(\"Post and like\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.smoke\n    @pytest.mark.asyncio\n    async def test_like_post(self):\n        await self.login_page.open()\n        await self.login_page.login(self.data.LOGIN)\n        await self.login_page.password(self.data.PASSWORD)\n        await self.login_page.submit_button()\n>       await self.dashboard_page.is_open()\n\nTests/test_for_like.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Pages.dashboard_page.DashboardPage object at 0x7f5cec23ed70>\n\n    async def is_open(self):\n>       await self.page.wait_for_url(self.PAGE_URL)\n\nBase/base_page.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Page url='https://opensource-demo.orangehrmlive.com/web/index.php/auth/login'>\nurl = 'https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index'\n\n    async def wait_for_url(\n        self,\n        url: typing.Union[str, typing.Pattern[str], typing.Callable[[str], bool]],\n        *,\n        wait_until: typing.Optional[\n            Literal[\"commit\", \"domcontentloaded\", \"load\", \"networkidle\"]\n        ] = None,\n        timeout: typing.Optional[float] = None,\n    ) -> None:\n        \"\"\"Page.wait_for_url\n    \n        Waits for the main frame to navigate to the given URL.\n    \n        **Usage**\n    \n        ```py\n        await page.click(\\\"a.delayed-navigation\\\") # clicking the link will indirectly cause a navigation\n        await page.wait_for_url(\\\"**/target.html\\\")\n        ```\n    \n        Parameters\n        ----------\n        url : Union[Callable[[str], bool], Pattern[str], str]\n            A glob pattern, regex pattern or predicate receiving [URL] to match while waiting for the navigation. Note that if\n            the parameter is a string without wildcard characters, the method will wait for navigation to URL that is exactly\n            equal to the string.\n        wait_until : Union[\"commit\", \"domcontentloaded\", \"load\", \"networkidle\", None]\n            When to consider operation succeeded, defaults to `load`. Events can be either:\n            - `'domcontentloaded'` - consider operation to be finished when the `DOMContentLoaded` event is fired.\n            - `'load'` - consider operation to be finished when the `load` event is fired.\n            - `'networkidle'` - **DISCOURAGED** consider operation to be finished when there are no network connections for\n              at least `500` ms. Don't use this method for testing, rely on web assertions to assess readiness instead.\n            - `'commit'` - consider operation to be finished when network response is received and the document started\n              loading.\n        timeout : Union[float, None]\n            Maximum operation time in milliseconds, defaults to 30 seconds, pass `0` to disable timeout. The default value can\n            be changed by using the `browser_context.set_default_navigation_timeout()`,\n            `browser_context.set_default_timeout()`, `page.set_default_navigation_timeout()` or\n            `page.set_default_timeout()` methods.\n        \"\"\"\n    \n        return mapping.from_maybe_impl(\n>           await self._impl_obj.wait_for_url(\n                url=self._wrap_handler(url), waitUntil=wait_until, timeout=timeout\n            )\n        )\n\n../local/lib/python3.10/dist-packages/playwright/async_api/_generated.py:9116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Page url='https://opensource-demo.orangehrmlive.com/web/index.php/auth/login'>\nurl = 'https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index'\nwaitUntil = None, timeout = None\n\n    async def wait_for_url(\n        self,\n        url: URLMatch,\n        waitUntil: DocumentLoadState = None,\n        timeout: float = None,\n    ) -> None:\n>       return await self._main_frame.wait_for_url(**locals_to_params(locals()))\n\n../local/lib/python3.10/dist-packages/playwright/_impl/_page.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Frame name= url='https://opensource-demo.orangehrmlive.com/web/index.php/auth/login'>\nurl = 'https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index'\nwaitUntil = None, timeout = None\n\n    async def wait_for_url(\n        self,\n        url: URLMatch,\n        waitUntil: DocumentLoadState = None,\n        timeout: float = None,\n    ) -> None:\n        assert self._page\n        if url_matches(\n            self._page._browser_context._options.get(\"baseURL\"), self.url, url\n        ):\n            await self._wait_for_load_state_impl(state=waitUntil, timeout=timeout)\n            return\n>       async with self.expect_navigation(\n            url=url, waitUntil=waitUntil, timeout=timeout\n        ):\n\n../local/lib/python3.10/dist-packages/playwright/_impl/_frame.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._event_context_manager.EventContextManagerImpl object at 0x7f5cebf8a800>\nargs = (None, None, None)\n\n    async def __aexit__(self, *args: Any) -> None:\n>       await self._future\n\n../local/lib/python3.10/dist-packages/playwright/_impl/_event_context_manager.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    async def continuation() -> Optional[Response]:\n>       event = await waiter.result()\nE       playwright._impl._errors.TimeoutError: Timeout 30000ms exceeded.\nE       =========================== logs ===========================\nE       waiting for navigation to \"https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index\" until 'load'\nE       ============================================================\n\n../local/lib/python3.10/dist-packages/playwright/_impl/_frame.py:209: TimeoutError",
    "steps" : [ {
      "name" : "Write login",
      "time" : {
        "start" : 1751459392607,
        "stop" : 1751459392608,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "login",
        "value" : "''"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Write password",
      "time" : {
        "start" : 1751459392819,
        "stop" : 1751459392819,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "password",
        "value" : "''"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Click submit",
      "time" : {
        "start" : 1751459392834,
        "stop" : 1751459392834,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "page::finalizer",
    "time" : {
      "start" : 1751459423038,
      "stop" : 1751459423072,
      "duration" : 34
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_function_event_loop::0",
    "time" : {
      "start" : 1751459423073,
      "stop" : 1751459423073,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Buzz page functionality"
  }, {
    "name" : "severity",
    "value" : "Critical"
  }, {
    "name" : "tag",
    "value" : "asyncio"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "Tests"
  }, {
    "name" : "suite",
    "value" : "test_for_like"
  }, {
    "name" : "subSuite",
    "value" : "TestMain"
  }, {
    "name" : "host",
    "value" : "73294e3a0629"
  }, {
    "name" : "thread",
    "value" : "7-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Tests.test_for_like"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "asyncio", "smoke" ]
  },
  "source" : "5a9cbcccd1963a68.json",
  "parameterValues" : [ ]
}